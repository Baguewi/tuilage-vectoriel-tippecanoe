#!/bin/bash
set -euo pipefail

echo "üöÄ D√©marrage g√©n√©ration tuiles PLU ‚Äî $(date)"

# === Configuration ===
DBNAME="bati-foncier"
HOST="localhost"
PORT="5432"
USER="postgres"
OUTPUT_DIR="data"
OUTPUT_GEOJSON="${OUTPUT_DIR}/plu-zone-urba.geojson"
OUTPUT_MBTILES="plu-zone-urba.mbtiles"
TILESERVER_DIR="/mnt/c/www/tileserver"
SQL_FILE="plu_request.sql"
MIN_SIZE_MB=10

# === Nettoyage et pr√©paration du dossier ===
echo "üßπ Nettoyage des fichiers pr√©c√©dents"
rm -rf "$OUTPUT_DIR" "$OUTPUT_MBTILES"
mkdir -p "$OUTPUT_DIR"

# === Requ√™te SQL dans un fichier externe (plus lisible et maintenable) ===
cat > "$SQL_FILE" <<'EOF'
SELECT
  ogc_fid AS id,
  libelle,
  REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(libelong,
    '√É¬©', '√©'), '√É¬®', '√®'), '√É¬Ø', '√Ø'), '√É¬¥', '√¥'), '√É¬ß', '√ß'), '√É¬™', '√™'),
    '√É¬π', '√π'), '√É¬¶', '√¶'), '√¢¬Ç¬¨', '‚Ç¨'), '√É¬´', '√´'), '√É¬º', '√º'), '√É¬¢', '√¢'),
    '√Ç¬©', '¬©'), '√É', '√†') AS libelong,
  typezone,
  datvalid,
  wkb_geometry AS geom
FROM plu_zone_urba
EOF

# === Export GeoJSON ===
echo "üì§ Export des donn√©es depuis PostgreSQL ‚Äî $(date)"
ogr2ogr -f "GeoJSON" "$OUTPUT_GEOJSON" PG:"host=$HOST port=$PORT dbname=$DBNAME user=$USER" -sql "@$SQL_FILE"

# === Tuilage avec Tippecanoe ===
echo "üó∫Ô∏è G√©n√©ration des tuiles vectorielles ‚Äî $(date)"
tippecanoe --detect-shared-borders --simplify-only-low-zooms --generate-ids --read-parallel --force --coalesce-densest-as-needed -Z10 -z16 --output "$OUTPUT_MBTILES" "$OUTPUT_GEOJSON"

# === V√©rification de la taille du fichier avant copie ===
echo "üì¶ V√©rification taille fichier MBTiles"
if [ -f "$OUTPUT_MBTILES" ]; then
  FILE_SIZE_BYTES=$(stat -c%s "$OUTPUT_MBTILES" 2>/dev/null || stat -f%z "$OUTPUT_MBTILES")
  FILE_SIZE_MB=$((FILE_SIZE_BYTES / 1024 / 1024))
  echo "üìè Taille : ${FILE_SIZE_MB} MB"

  if [ "$FILE_SIZE_MB" -ge "$MIN_SIZE_MB" ]; then
    echo "‚úÖ Fichier valide, d√©placement vers $TILESERVER_DIR"
    mv "$OUTPUT_MBTILES" "$TILESERVER_DIR/"
  else
    echo "‚ùå Fichier trop petit, abandon du d√©placement."
  fi
else
  echo "‚ùå Fichier MBTiles non g√©n√©r√©."
fi

# === Nettoyage final ===
echo "üßº Nettoyage temporaire"
rm -rf "$OUTPUT_DIR" "$SQL_FILE"

echo "‚úÖ Fin du script ‚Äî $(date)"
